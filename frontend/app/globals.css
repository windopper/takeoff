@import "tailwindcss";
@plugin "@tailwindcss/typography";
@custom-variant dark (&:where(.dark, .dark *));

:root {
  --background: #fafafa;
  --foreground: #18181b;
  --zinc-50: #fafafa;
  --zinc-100: #f4f4f5;
  --zinc-200: #e4e4e7;
  --zinc-300: #d4d4d8;
  --zinc-400: #a1a1aa;
  --zinc-500: #71717a;
  --zinc-600: #52525b;
  --zinc-700: #3f3f46;
  --zinc-800: #27272a;
  --zinc-900: #18181b;
}

@font-face {
  font-family: 'PyeojinGothic-Bold';
  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2504-1@1.0/PyeojinGothic-Bold.woff2') format('woff2');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'PyeojinGothic-Regular';
  src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/2504-1@1.0/PyeojinGothic-Regular.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
}



@font-face {
  font-family: 'MaruBuri';
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot);
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.eot?#iefix) format("embedded-opentype"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff2) format("woff2"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.woff) format("woff"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Regular.ttf) format("truetype");
}

@font-face {
  font-family: 'MaruBuriSemiBold';
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.eot);
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.eot?#iefix) format("embedded-opentype"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.woff2) format("woff2"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.woff) format("woff"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-SemiBold.ttf) format("truetype");
}

@font-face {
  font-family: 'MaruBuriBold';
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.eot);
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.eot?#iefix) format("embedded-opentype"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.woff2) format("woff2"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.woff) format("woff"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Bold.ttf) format("truetype");
}

@font-face {
  font-family: 'MaruBuriLight';
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.eot);
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.eot?#iefix) format("embedded-opentype"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.woff2) format("woff2"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.woff) format("woff"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-Light.ttf) format("truetype");
}

@font-face {
  font-family: 'MaruBuriExtraLight';
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.eot);
  src: url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.eot?#iefix) format("embedded-opentype"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.woff2) format("woff2"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.woff) format("woff"), url(https://hangeul.pstatic.net/hangeul_static/webfont/MaruBuri/MaruBuri-ExtraLight.ttf) format("truetype");
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #fafafa;
  }
}

/* Dark mode styles */
.dark {
  --background: #0a0a0a;
  --foreground: #fafafa;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: 'PyeojinGothic-Bold', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  position: relative;
  overflow-x: hidden;
}

/* Grainy texture background */
body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -2;
  opacity: 0.12;
  background-color: transparent;
  background-image: 
  url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 600 600'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)'/%3E%3C/svg%3E");
  background-repeat: repeat;
  background-size: 182px;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--zinc-400);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--zinc-500);
}

/* Glass effect utility */
.glass {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  background: rgba(250, 250, 250, 0.7);
  border: 1px solid rgba(228, 228, 231, 0.2);
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

@media (prefers-color-scheme: dark) {
  .glass {
    background: rgba(10, 10, 10, 0.7);
    border: 1px solid rgba(39, 39, 42, 0.2);
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.3),
      0 2px 4px -1px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.05);
  }
}

/* Line clamp utilities */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.spinning-path {
  transform-origin: 400px 400px;
}

/* 다양한 스핀 애니메이션 정의 */
@keyframes continuous-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes reverse-spin {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

@keyframes pulse-spin {
  0%, 100% {
    transform: rotate(0deg) scale(1);
    opacity: 0.6;
  }
  50% {
    transform: rotate(180deg) scale(1.1);
    opacity: 1;
  }
}

@keyframes wobble-spin {
  0% {
    transform: rotate(0deg) scaleX(1);
  }
  25% {
    transform: rotate(90deg) scaleX(0.8);
  }
  50% {
    transform: rotate(180deg) scaleX(1.2);
  }
  75% {
    transform: rotate(270deg) scaleX(0.9);
  }
  100% {
    transform: rotate(360deg) scaleX(1);
  }
}

@keyframes elastic-spin {
  0% {
    transform: rotate(0deg) scale(1);
  }
  20% {
    transform: rotate(72deg) scale(1.3);
  }
  40% {
    transform: rotate(144deg) scale(0.7);
  }
  60% {
    transform: rotate(216deg) scale(1.2);
  }
  80% {
    transform: rotate(288deg) scale(0.8);
  }
  100% {
    transform: rotate(360deg) scale(1);
  }
}

@keyframes orbit-spin {
  0% {
    transform: rotate(0deg) translateX(10px) rotate(0deg);
  }
  100% {
    transform: rotate(360deg) translateX(10px) rotate(-360deg);
  }
}

@keyframes chaotic-spin {
  0% {
    transform: rotate(0deg) scale(1) skewX(0deg);
  }
  16.66% {
    transform: rotate(60deg) scale(1.1) skewX(5deg);
  }
  33.33% {
    transform: rotate(120deg) scale(0.9) skewX(-3deg);
  }
  50% {
    transform: rotate(180deg) scale(1.2) skewX(8deg);
  }
  66.66% {
    transform: rotate(240deg) scale(0.8) skewX(-6deg);
  }
  83.33% {
    transform: rotate(300deg) scale(1.05) skewX(4deg);
  }
  100% {
    transform: rotate(360deg) scale(1) skewX(0deg);
  }
}

@keyframes wave-spin {
  0% {
    transform: rotate(0deg) translateY(0px);
  }
  25% {
    transform: rotate(90deg) translateY(-5px);
  }
  50% {
    transform: rotate(180deg) translateY(5px);
  }
  75% {
    transform: rotate(270deg) translateY(-2px);
  }
  100% {
    transform: rotate(360deg) translateY(0px);
  }
}

@keyframes spiral-spin {
  0% {
    transform: rotate(0deg) scale(0.8);
  }
  50% {
    transform: rotate(180deg) scale(1.3);
  }
  100% {
    transform: rotate(360deg) scale(0.8);
  }
}

@keyframes jitter-spin {
  0%, 100% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(5deg);
  }
  20% {
    transform: rotate(-3deg);
  }
  30% {
    transform: rotate(4deg);
  }
  40% {
    transform: rotate(-2deg);
  }
  50% {
    transform: rotate(180deg);
  }
  60% {
    transform: rotate(185deg);
  }
  70% {
    transform: rotate(177deg);
  }
  80% {
    transform: rotate(184deg);
  }
  90% {
    transform: rotate(178deg);
  }
}

@keyframes bounce-spin {
  0%, 100% {
    transform: rotate(0deg) scale(1);
  }
  25% {
    transform: rotate(90deg) scale(1.2);
  }
  50% {
    transform: rotate(180deg) scale(0.8);
  }
  75% {
    transform: rotate(270deg) scale(1.1);
  }
}

@keyframes smooth-flow {
  0% {
    transform: rotate(0deg) translateX(0px) translateY(0px);
  }
  25% {
    transform: rotate(90deg) translateX(3px) translateY(-2px);
  }
  50% {
    transform: rotate(180deg) translateX(-1px) translateY(4px);
  }
  75% {
    transform: rotate(270deg) translateX(-3px) translateY(-1px);
  }
  100% {
    transform: rotate(360deg) translateX(0px) translateY(0px);
  }
}

@keyframes twisty-spin {
  0% {
    transform: rotate(0deg) skewY(0deg);
  }
  33% {
    transform: rotate(120deg) skewY(10deg);
  }
  66% {
    transform: rotate(240deg) skewY(-8deg);
  }
  100% {
    transform: rotate(360deg) skewY(0deg);
  }
}

@keyframes morphic-spin {
  0% {
    transform: rotate(0deg) scale(1, 1);
  }
  25% {
    transform: rotate(90deg) scale(1.2, 0.8);
  }
  50% {
    transform: rotate(180deg) scale(0.8, 1.3);
  }
  75% {
    transform: rotate(270deg) scale(1.1, 0.9);
  }
  100% {
    transform: rotate(360deg) scale(1, 1);
  }
}

@keyframes pendulum-spin {
  0% {
    transform: rotate(0deg) translateX(8px) rotate(-30deg);
  }
  50% {
    transform: rotate(180deg) translateX(-8px) rotate(30deg);
  }
  100% {
    transform: rotate(360deg) translateX(8px) rotate(-30deg);
  }
}

@keyframes zigzag-spin {
  0% {
    transform: rotate(0deg) translateX(0px) translateY(0px);
  }
  20% {
    transform: rotate(72deg) translateX(5px) translateY(-3px);
  }
  40% {
    transform: rotate(144deg) translateX(-4px) translateY(6px);
  }
  60% {
    transform: rotate(216deg) translateX(7px) translateY(-2px);
  }
  80% {
    transform: rotate(288deg) translateX(-3px) translateY(4px);
  }
  100% {
    transform: rotate(360deg) translateX(0px) translateY(0px);
  }
}

@keyframes flutter-spin {
  0%, 100% {
    transform: rotate(0deg) scale(1) opacity(0.7);
  }
  10% {
    transform: rotate(36deg) scale(1.05) opacity(0.9);
  }
  20% {
    transform: rotate(72deg) scale(0.95) opacity(0.6);
  }
  30% {
    transform: rotate(108deg) scale(1.1) opacity(1);
  }
  40% {
    transform: rotate(144deg) scale(0.9) opacity(0.8);
  }
  50% {
    transform: rotate(180deg) scale(1.15) opacity(0.5);
  }
  60% {
    transform: rotate(216deg) scale(0.85) opacity(0.9);
  }
  70% {
    transform: rotate(252deg) scale(1.05) opacity(0.7);
  }
  80% {
    transform: rotate(288deg) scale(0.95) opacity(1);
  }
  90% {
    transform: rotate(324deg) scale(1.1) opacity(0.8);
  }
}

@keyframes rhythmic-spin {
  0% {
    transform: rotate(0deg) scale(1);
  }
  12.5% {
    transform: rotate(45deg) scale(1.1);
  }
  25% {
    transform: rotate(90deg) scale(0.9);
  }
  37.5% {
    transform: rotate(135deg) scale(1.2);
  }
  50% {
    transform: rotate(180deg) scale(0.8);
  }
  62.5% {
    transform: rotate(225deg) scale(1.1);
  }
  75% {
    transform: rotate(270deg) scale(0.95);
  }
  87.5% {
    transform: rotate(315deg) scale(1.05);
  }
  100% {
    transform: rotate(360deg) scale(1);
  }
}

@keyframes liquid-spin {
  0% {
    transform: rotate(0deg) skewX(0deg) skewY(0deg);
  }
  25% {
    transform: rotate(90deg) skewX(5deg) skewY(-3deg);
  }
  50% {
    transform: rotate(180deg) skewX(-4deg) skewY(6deg);
  }
  75% {
    transform: rotate(270deg) skewX(3deg) skewY(-2deg);
  }
  100% {
    transform: rotate(360deg) skewX(0deg) skewY(0deg);
  }
}